(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{749:function(e,t,r){"use strict";r.r(t);var a=r(103),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"前端自动化解决方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端自动化解决方案"}},[e._v("#")]),e._v(" 前端自动化解决方案")]),e._v(" "),r("h2",{attrs:{id:"背景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[e._v("#")]),e._v(" 背景")]),e._v(" "),r("p",[e._v("随着系统业务规模的增长，希望在发布前针对用户页面快速进行冒烟测试，避免出现页面无法展示、功能异常等问题，人工的切换场景模拟异常导致演习效率很低，因此需要通过开发自动化测试工具来提升效率；")]),e._v(" "),r("h2",{attrs:{id:"技术选型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#技术选型"}},[e._v("#")]),e._v(" 技术选型")]),e._v(" "),r("p",[e._v("提到 Web 的自动化测试，很多人熟悉的是 Selenium 2.0（Selenium WebDriver）， 支持多平台、多语言、多款浏览器（通过各种浏览器的驱动来驱动浏览器），提供了功能丰富的API接口。而随着前端技术的发展，Selenium 2.0 逐渐呈现出环境安装复杂、API 调用不友好、性能不高等缺点。新一代的自动化测试工具 —— Puppeteer ，相较于 Selenium WebDriver 环境安装更简单、性能更好、效率更高、在浏览器执行 Javascript 的 API 更简单，它还提供了网络拦截等功能。")]),e._v(" "),r("blockquote",[r("p",[e._v("Puppeteer 是一个 Node 库，它提供了一套高阶 API ，通过 Devtools 协议控制 Chromium 或 Chrome 浏览器。Puppeteer 默认以 Headless 模式运行，但是可以通过修改配置文件运行“有头”模式。")])]),e._v(" "),r("p",[e._v("官方描述的功能：")]),e._v(" "),r("p",[e._v("生成页面 PDF；\n抓取 SPA（单页应用）并生成预渲染内容（即“ SSR ”，服务器端渲染）；\n自动提交表单，进行 UI 测试，键盘输入等；\n创建一个时时更新的自动化测试环境，使用 JavaScript 和最新的浏览器功能直接在最新版本的 Chrome 中执行测试；\n捕获网站的 Timeline Trace，用来帮助分析性能问题；\n测试浏览器扩展。")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),r("p",[e._v("headless模式可以用来在服务端运行自动化程序，或者接入CI；细节操作方案参考 "),r("a",{attrs:{href:"https://juejin.im/post/6844904201349234701",target:"_blank",rel:"noopener noreferrer"}},[e._v('"-> Puppeteer 服务端部署"'),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=s.exports}}]);